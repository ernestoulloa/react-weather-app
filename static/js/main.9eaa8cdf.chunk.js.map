{"version":3,"sources":["helpers/history/index.jsx","services/weather.js","services/baseApi.js","services/index.js","stores/weathers/weatherActionTypes.jsx","stores/weathers/weatherAction.jsx","components/Loading/index.jsx","constants/constants.js","components/TemperatureSelectors/index.jsx","components/WeatherBarChart/WeatherBarChart.jsx","helpers/common/timeHelpers.js","helpers/common/arraysHelpers.js","helpers/common/weatherHelpers.js","stores/weathers/weatherSelectors.jsx","components/WeatherBarChart/index.jsx","components/Temperature/index.jsx","components/AdditionalWeatherInfo/index.jsx","components/WeatherCard/index.jsx","components/WeatherCardsSlider/index.jsx","components/CardArrows/index.jsx","components/Home/Home.jsx","components/Home/index.jsx","components/App/index.jsx","serviceWorker.js","helpers/enhancers/monitorReducers.js","helpers/middleware/logger.js","stores/weathers/weatherReducer.jsx","index.jsx","stores/rootStore.jsx","stores/rootReducers.jsx"],"names":["history","createHashHistory","hashType","url","weatherService","a","query","cnt","units","fetch","process","getAll","ApiActions","axiosInstance","axios","get","payload","post","Axios","create","headers","interceptors","request","use","configRequest","err","Promise","reject","weathers","Weather","BaseApi","prefix","actionTypes","forEach","item","dispatch","type","ACTION_TYPES","WEATHERS_GET_ALL_REQUEST","API","then","res","json","data","WEATHERS_GET_ALL_SUCCESS","WEATHERS_GET_ALL_FAILURE","Loading","Box","display","flexDirection","alignItems","justifyContent","Typography","color","variant","CircularProgress","TemperatureScales","TemperatureSelectors","props","scale","RadioGroup","aria-label","name","value","onChange","event","onRadioChange","target","row","FormControlLabel","control","Radio","label","WeatherBarChart","series","day","options","chart","className","zoomType","title","text","xAxis","enabled","style","fontWeight","labels","rotation","fontSize","fontFamily","yAxis","min","legend","tooltip","pointFormat","dataLabels","align","format","y","responsive","rules","condition","maxWidth","chartOptions","highcharts","Highcharts","unixToStringHour","unixTimestamp","moment","unix","utc","groupBy","arr","criteria","reduce","obj","key","hasOwnProperty","push","getListByDays","temperatures","result","map","x","dt_txt","groupedByDays","Object","entries","avgTemp","avgHumidity","avgWind","i","length","main","temp","humidity","wind","speed","Math","round","date","items","getListTemperatureGroupByDay","temps","getRainInfo4Day","find","rain","weatherSelector","state","weather","temperaturesSelector","createSelector","isLoading","list","temperaturesBySelectedDaySelector","ConnectedWeatherBarChart","useSelector","dt","Temperature","temperature","tempScale","testid","defaultProps","AdditionalWeatherInfo","snow","undefined","useStyles","makeStyles","theme","root","height","cursor","media","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","body","flex","expandOpen","avatar","backgroundColor","red","actions","WeatherCard","icon","classes","weatherInfo","active","React","useState","raised","setRaised","weatherDaySubtitle","weatherDay","toggleRaised","Card","onMouseOver","onFocus","onMouseOut","onBlur","CardHeader","Avatar","src","description","subheader","CardContent","CardActions","Button","disableElevation","size","disableFocusRipple","WeatherCardsSlider","content","onGraphDetail","activeCard","setActiveCard","activeCardDay","setActiveCardDay","listItems","elem","Grid","toString","onClick","container","spacing","CardArrows","showLeft","showRight","direction","IconButton","onArrowClick","Home","useDispatch","showGraph","setShowGraph","setDay","metric","setMetric","pageIndex","setPageIndex","slideIn","setSlideIn","hasLeftItems","setHasLeftItems","hasRightItems","setHasRightItems","slideDirection","setSlideDirection","numSlides","slice","handleSliderNavigation","newIndex","oppDirection","setTimeout","useEffect","handleKeyDown","e","keyCode","window","addEventListener","removeEventListener","Paper","justify","Slide","in","id","newDate","ConnectedHome","App","CssBaseline","basename","exact","path","component","bg","Boolean","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","console","log","logger","store","next","group","info","getState","groupEnd","errors","cod","message","city","weatherReducer","preloadedState","middlewares","thunkMiddleware","loggerMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","combineReducers","router","connectRouter","configureStore","targetRoot","document","querySelector","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9eaa8cdf.chunk.js","sourcesContent":["import { createHashHistory } from 'history';\n\nconst history = createHashHistory({\n  hashType: 'slash',\n});\n\nexport default history;\n","export const url = 'https://api.openweathermap.org/data/2.5/forecast';\r\nfunction weatherService() {\r\n  async function getAll(query = 'Munich,de', cnt = '40', units = 'imperial') {\r\n    return fetch(`${url}?q=${query}&APPID=${process.env.REACT_APP_OPENWEATHERDATA_API}&cnt=${cnt}&units=${units}`);\r\n  }\r\n\r\n  return {\r\n    getAll,\r\n  };\r\n}\r\n\r\nexport default weatherService;\r\n","function ApiActions(axiosInstance) {\n  const axios = axiosInstance;\n\n  async function get(url) {\n    return axios.get(url);\n  }\n\n  async function post(url, payload) {\n    return axios.post(url, payload);\n  }\n\n  return {\n    get,\n    post,\n  };\n}\n\nexport default ApiActions;\n","import Axios from 'axios';\r\nimport Weather from './weather';\r\nimport BaseApi from './baseApi';\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst axios = Axios.create(config);\r\n\r\n// Add token if exist\r\naxios.interceptors.request.use((configRequest) => configRequest, (err) => Promise.reject(err));\r\n\r\nconst api = BaseApi(axios);\r\n\r\nexport default {\r\n  axios,\r\n  weathers: Weather(api),\r\n};\r\n","const apiActionTypes = [\n  'GET_ALL',\n];\nconst prefix = 'WEATHERS';\n\nconst actionTypes = {};\napiActionTypes.forEach((item) => {\n  actionTypes[`${prefix}_${item}_REQUEST`] = `${prefix}_${item}_REQUEST`;\n  actionTypes[`${prefix}_${item}_SUCCESS`] = `${prefix}_${item}_SUCCESS`;\n  actionTypes[`${prefix}_${item}_FAILURE`] = `${prefix}_${item}_FAILURE`;\n});\n\nexport default {\n  ...actionTypes,\n};\n","import API from '../../services';\r\nimport ACTION_TYPES from './weatherActionTypes';\r\n\r\nconst getAll = (query = 'Munich,de', cnt = '40', units = 'imperial') => async (dispatch) => {\r\n  dispatch({ type: ACTION_TYPES.WEATHERS_GET_ALL_REQUEST });\r\n\r\n  try {\r\n    const data = await API.weathers.getAll(query, cnt, units).then((res) => res.json());\r\n\r\n    dispatch({\r\n      type: ACTION_TYPES.WEATHERS_GET_ALL_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: ACTION_TYPES.WEATHERS_GET_ALL_FAILURE });\r\n  }\r\n};\r\n\r\nexport default getAll;\r\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst Loading = () => (\n  <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n    <Typography color=\"textPrimary\" variant=\"h4\">\n      Loading...\n    </Typography>\n    <CircularProgress />\n  </Box>\n);\n\nexport default Loading;\n","export const WeatherIconBaseURL = 'http://openweathermap.org/img/wn/';\r\nexport const WeatherIconSuffix = '@2x.png';\r\nexport const TemperatureScales = {\r\n  CELSIUS: 'Celsius',\r\n  FAHRENHEIT: 'Fahrenheit',\r\n};\r\n\r\nexport const mockResponse = {\r\n  cod: '200',\r\n  message: 0,\r\n  cnt: 40,\r\n  list: [{\r\n    dt: 1594890000,\r\n    main: {\r\n      temp: 58.28,\r\n      feels_like: 56.75,\r\n      temp_min: 58.28,\r\n      temp_max: 59.16,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 90,\r\n      temp_kf: -0.49,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 5.68, deg: 262 },\r\n    rain: { '3h': 1.21 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-16 09:00:00',\r\n  }, {\r\n    dt: 1594900800,\r\n    main: {\r\n      temp: 59.34,\r\n      feels_like: 57.24,\r\n      temp_min: 59.34,\r\n      temp_max: 59.86,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 85,\r\n      temp_kf: -0.29,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 6.4, deg: 258 },\r\n    rain: { '3h': 1.29 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-16 12:00:00',\r\n  }, {\r\n    dt: 1594911600,\r\n    main: {\r\n      temp: 56.95,\r\n      feels_like: 55.02,\r\n      temp_min: 56.91,\r\n      temp_max: 56.95,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 957,\r\n      humidity: 91,\r\n      temp_kf: 0.02,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 5.79, deg: 296 },\r\n    rain: { '3h': 1.61 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-16 15:00:00',\r\n  }, {\r\n    dt: 1594922400,\r\n    main: {\r\n      temp: 55.15,\r\n      feels_like: 52.79,\r\n      temp_min: 55.13,\r\n      temp_max: 55.15,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 93,\r\n      temp_kf: 0.01,\r\n    },\r\n    weather: [{\r\n      id: 501, main: 'Rain', description: 'moderate rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 5.93, deg: 288 },\r\n    rain: { '3h': 4.19 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-16 18:00:00',\r\n  }, {\r\n    dt: 1594933200,\r\n    main: {\r\n      temp: 54.55,\r\n      feels_like: 52.88,\r\n      temp_min: 54.55,\r\n      temp_max: 54.55,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 95,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 501, main: 'Rain', description: 'moderate rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 4.7, deg: 293 },\r\n    rain: { '3h': 6.03 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-16 21:00:00',\r\n  }, {\r\n    dt: 1594944000,\r\n    main: {\r\n      temp: 53.98,\r\n      feels_like: 52.47,\r\n      temp_min: 53.98,\r\n      temp_max: 53.98,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 95,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 501, main: 'Rain', description: 'moderate rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 4.14, deg: 303 },\r\n    rain: { '3h': 6.98 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-17 00:00:00',\r\n  }, {\r\n    dt: 1594954800,\r\n    main: {\r\n      temp: 53.53,\r\n      feels_like: 52.2,\r\n      temp_min: 53.53,\r\n      temp_max: 53.53,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 95,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 3.58, deg: 306 },\r\n    rain: { '3h': 2.37 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-17 03:00:00',\r\n  }, {\r\n    dt: 1594965600,\r\n    main: {\r\n      temp: 54.54,\r\n      feels_like: 53.87,\r\n      temp_min: 54.54,\r\n      temp_max: 54.54,\r\n      pressure: 1019,\r\n      sea_level: 1019,\r\n      grnd_level: 958,\r\n      humidity: 94,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 98 },\r\n    wind: { speed: 2.75, deg: 304 },\r\n    rain: { '3h': 0.34 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-17 06:00:00',\r\n  }, {\r\n    dt: 1594976400,\r\n    main: {\r\n      temp: 57.74,\r\n      feels_like: 57.76,\r\n      temp_min: 57.74,\r\n      temp_max: 57.74,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 86,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 100 },\r\n    wind: { speed: 1.92, deg: 314 },\r\n    rain: { '3h': 0.47 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-17 09:00:00',\r\n  }, {\r\n    dt: 1594987200,\r\n    main: {\r\n      temp: 66.6,\r\n      feels_like: 65.52,\r\n      temp_min: 66.6,\r\n      temp_max: 66.6,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 958,\r\n      humidity: 64,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 74 },\r\n    wind: { speed: 4.14, deg: 329 },\r\n    rain: { '3h': 0.75 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-17 12:00:00',\r\n  }, {\r\n    dt: 1594998000,\r\n    main: {\r\n      temp: 67.15,\r\n      feels_like: 65.23,\r\n      temp_min: 67.15,\r\n      temp_max: 67.15,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 957,\r\n      humidity: 62,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 14 },\r\n    wind: { speed: 5.44, deg: 328 },\r\n    rain: { '3h': 0.59 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-17 15:00:00',\r\n  }, {\r\n    dt: 1595008800,\r\n    main: {\r\n      temp: 62.04,\r\n      feels_like: 61.66,\r\n      temp_min: 62.04,\r\n      temp_max: 62.04,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 957,\r\n      humidity: 79,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 11 },\r\n    wind: { speed: 3.69, deg: 344 },\r\n    rain: { '3h': 1.6 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-17 18:00:00',\r\n  }, {\r\n    dt: 1595019600,\r\n    main: {\r\n      temp: 56.75,\r\n      feels_like: 56.73,\r\n      temp_min: 56.75,\r\n      temp_max: 56.75,\r\n      pressure: 1019,\r\n      sea_level: 1019,\r\n      grnd_level: 958,\r\n      humidity: 81,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 79 },\r\n    wind: { speed: 0.67, deg: 298 },\r\n    rain: { '3h': 1.81 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-17 21:00:00',\r\n  }, {\r\n    dt: 1595030400,\r\n    main: {\r\n      temp: 54.3,\r\n      feels_like: 52.32,\r\n      temp_min: 54.3,\r\n      temp_max: 54.3,\r\n      pressure: 1019,\r\n      sea_level: 1019,\r\n      grnd_level: 958,\r\n      humidity: 86,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 64 },\r\n    wind: { speed: 3.76, deg: 232 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-18 00:00:00',\r\n  }, {\r\n    dt: 1595041200,\r\n    main: {\r\n      temp: 53.65,\r\n      feels_like: 51.15,\r\n      temp_min: 53.65,\r\n      temp_max: 53.65,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 89,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 78 },\r\n    wind: { speed: 4.83, deg: 262 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-18 03:00:00',\r\n  }, {\r\n    dt: 1595052000,\r\n    main: {\r\n      temp: 56.77,\r\n      feels_like: 55.36,\r\n      temp_min: 56.77,\r\n      temp_max: 56.77,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 85,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04d',\r\n    }],\r\n    clouds: { all: 59 },\r\n    wind: { speed: 3.8, deg: 274 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-18 06:00:00',\r\n  }, {\r\n    dt: 1595062800,\r\n    main: {\r\n      temp: 64.74,\r\n      feels_like: 63.12,\r\n      temp_min: 64.74,\r\n      temp_max: 64.74,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 957,\r\n      humidity: 68,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 13 },\r\n    wind: { speed: 5.03, deg: 352 },\r\n    rain: { '3h': 0.73 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-18 09:00:00',\r\n  }, {\r\n    dt: 1595073600,\r\n    main: {\r\n      temp: 70.16,\r\n      feels_like: 67.86,\r\n      temp_min: 70.16,\r\n      temp_max: 70.16,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 957,\r\n      humidity: 54,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 7 },\r\n    wind: { speed: 5.61, deg: 336 },\r\n    rain: { '3h': 0.56 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-18 12:00:00',\r\n  }, {\r\n    dt: 1595084400,\r\n    main: {\r\n      temp: 69.73,\r\n      feels_like: 67.96,\r\n      temp_min: 69.73,\r\n      temp_max: 69.73,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 956,\r\n      humidity: 59,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 11 },\r\n    wind: { speed: 5.75, deg: 344 },\r\n    rain: { '3h': 0.91 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-18 15:00:00',\r\n  }, {\r\n    dt: 1595095200,\r\n    main: {\r\n      temp: 62.24,\r\n      feels_like: 61.47,\r\n      temp_min: 62.24,\r\n      temp_max: 62.24,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 956,\r\n      humidity: 80,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 22 },\r\n    wind: { speed: 4.7, deg: 82 },\r\n    rain: { '3h': 2.18 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-18 18:00:00',\r\n  }, {\r\n    dt: 1595106000,\r\n    main: {\r\n      temp: 58.12,\r\n      feels_like: 56.53,\r\n      temp_min: 58.12,\r\n      temp_max: 58.12,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 83,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 79 },\r\n    wind: { speed: 4.47, deg: 197 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-18 21:00:00',\r\n  }, {\r\n    dt: 1595116800,\r\n    main: {\r\n      temp: 56.28,\r\n      feels_like: 54.88,\r\n      temp_min: 56.28,\r\n      temp_max: 56.28,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 957,\r\n      humidity: 85,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 804, main: 'Clouds', description: 'overcast clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 88 },\r\n    wind: { speed: 3.53, deg: 221 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-19 00:00:00',\r\n  }, {\r\n    dt: 1595127600,\r\n    main: {\r\n      temp: 54.52,\r\n      feels_like: 52.75,\r\n      temp_min: 54.52,\r\n      temp_max: 54.52,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 956,\r\n      humidity: 87,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 68 },\r\n    wind: { speed: 3.62, deg: 225 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-19 03:00:00',\r\n  }, {\r\n    dt: 1595138400,\r\n    main: {\r\n      temp: 58.95,\r\n      feels_like: 58.26,\r\n      temp_min: 58.95,\r\n      temp_max: 58.95,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 956,\r\n      humidity: 81,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 802, main: 'Clouds', description: 'scattered clouds', icon: '03d',\r\n    }],\r\n    clouds: { all: 38 },\r\n    wind: { speed: 2.93, deg: 230 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-19 06:00:00',\r\n  }, {\r\n    dt: 1595149200,\r\n    main: {\r\n      temp: 71.78,\r\n      feels_like: 72.9,\r\n      temp_min: 71.78,\r\n      temp_max: 71.78,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 957,\r\n      humidity: 56,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 800, main: 'Clear', description: 'clear sky', icon: '01d',\r\n    }],\r\n    clouds: { all: 0 },\r\n    wind: { speed: 0.89, deg: 24 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-19 09:00:00',\r\n  }, {\r\n    dt: 1595160000,\r\n    main: {\r\n      temp: 75.22,\r\n      feels_like: 74.03,\r\n      temp_min: 75.22,\r\n      temp_max: 75.22,\r\n      pressure: 1014,\r\n      sea_level: 1014,\r\n      grnd_level: 956,\r\n      humidity: 46,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 800, main: 'Clear', description: 'clear sky', icon: '01d',\r\n    }],\r\n    clouds: { all: 0 },\r\n    wind: { speed: 3.78, deg: 19 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-19 12:00:00',\r\n  }, {\r\n    dt: 1595170800,\r\n    main: {\r\n      temp: 74.71,\r\n      feels_like: 73.51,\r\n      temp_min: 74.71,\r\n      temp_max: 74.71,\r\n      pressure: 1014,\r\n      sea_level: 1014,\r\n      grnd_level: 955,\r\n      humidity: 49,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04d',\r\n    }],\r\n    clouds: { all: 79 },\r\n    wind: { speed: 4.5, deg: 21 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-19 15:00:00',\r\n  }, {\r\n    dt: 1595181600,\r\n    main: {\r\n      temp: 68.58,\r\n      feels_like: 69.08,\r\n      temp_min: 68.58,\r\n      temp_max: 68.58,\r\n      pressure: 1014,\r\n      sea_level: 1014,\r\n      grnd_level: 955,\r\n      humidity: 69,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04d',\r\n    }],\r\n    clouds: { all: 76 },\r\n    wind: { speed: 3.65, deg: 35 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-19 18:00:00',\r\n  }, {\r\n    dt: 1595192400,\r\n    main: {\r\n      temp: 61.5,\r\n      feels_like: 61.79,\r\n      temp_min: 61.5,\r\n      temp_max: 61.5,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 956,\r\n      humidity: 79,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 804, main: 'Clouds', description: 'overcast clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 91 },\r\n    wind: { speed: 2.21, deg: 178 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-19 21:00:00',\r\n  }, {\r\n    dt: 1595203200,\r\n    main: {\r\n      temp: 59.79,\r\n      feels_like: 59.14,\r\n      temp_min: 59.79,\r\n      temp_max: 59.79,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 956,\r\n      humidity: 84,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 804, main: 'Clouds', description: 'overcast clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 95 },\r\n    wind: { speed: 3.87, deg: 211 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-20 00:00:00',\r\n  }, {\r\n    dt: 1595214000,\r\n    main: {\r\n      temp: 57.96,\r\n      feels_like: 57.11,\r\n      temp_min: 57.96,\r\n      temp_max: 57.96,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 955,\r\n      humidity: 87,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 804, main: 'Clouds', description: 'overcast clouds', icon: '04n',\r\n    }],\r\n    clouds: { all: 88 },\r\n    wind: { speed: 3.76, deg: 217 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-20 03:00:00',\r\n  }, {\r\n    dt: 1595224800,\r\n    main: {\r\n      temp: 63.97,\r\n      feels_like: 64.29,\r\n      temp_min: 63.97,\r\n      temp_max: 63.97,\r\n      pressure: 1016,\r\n      sea_level: 1016,\r\n      grnd_level: 956,\r\n      humidity: 75,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 803, main: 'Clouds', description: 'broken clouds', icon: '04d',\r\n    }],\r\n    clouds: { all: 60 },\r\n    wind: { speed: 2.68, deg: 237 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-20 06:00:00',\r\n  }, {\r\n    dt: 1595235600,\r\n    main: {\r\n      temp: 75.09,\r\n      feels_like: 76.01,\r\n      temp_min: 75.09,\r\n      temp_max: 75.09,\r\n      pressure: 1015,\r\n      sea_level: 1015,\r\n      grnd_level: 956,\r\n      humidity: 54,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 800, main: 'Clear', description: 'clear sky', icon: '01d',\r\n    }],\r\n    clouds: { all: 4 },\r\n    wind: { speed: 2.46, deg: 252 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-20 09:00:00',\r\n  }, {\r\n    dt: 1595246400,\r\n    main: {\r\n      temp: 78.31,\r\n      feels_like: 75.29,\r\n      temp_min: 78.31,\r\n      temp_max: 78.31,\r\n      pressure: 1013,\r\n      sea_level: 1013,\r\n      grnd_level: 955,\r\n      humidity: 46,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 800, main: 'Clear', description: 'clear sky', icon: '01d',\r\n    }],\r\n    clouds: { all: 3 },\r\n    wind: { speed: 8.59, deg: 287 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-20 12:00:00',\r\n  }, {\r\n    dt: 1595257200,\r\n    main: {\r\n      temp: 77.13,\r\n      feels_like: 73.35,\r\n      temp_min: 77.13,\r\n      temp_max: 77.13,\r\n      pressure: 1014,\r\n      sea_level: 1014,\r\n      grnd_level: 955,\r\n      humidity: 50,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 801, main: 'Clouds', description: 'few clouds', icon: '02d',\r\n    }],\r\n    clouds: { all: 11 },\r\n    wind: { speed: 10.65, deg: 287 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-20 15:00:00',\r\n  }, {\r\n    dt: 1595268000,\r\n    main: {\r\n      temp: 70.11,\r\n      feels_like: 71.06,\r\n      temp_min: 70.11,\r\n      temp_max: 70.11,\r\n      pressure: 1015,\r\n      sea_level: 1015,\r\n      grnd_level: 956,\r\n      humidity: 70,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 7 },\r\n    wind: { speed: 4.03, deg: 326 },\r\n    rain: { '3h': 0.21 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-20 18:00:00',\r\n  }, {\r\n    dt: 1595278800,\r\n    main: {\r\n      temp: 62.92,\r\n      feels_like: 64.9,\r\n      temp_min: 62.92,\r\n      temp_max: 62.92,\r\n      pressure: 1017,\r\n      sea_level: 1017,\r\n      grnd_level: 957,\r\n      humidity: 83,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 26 },\r\n    wind: { speed: 0.81, deg: 353 },\r\n    rain: { '3h': 1.41 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-20 21:00:00',\r\n  }, {\r\n    dt: 1595289600,\r\n    main: {\r\n      temp: 60.62,\r\n      feels_like: 59.77,\r\n      temp_min: 60.62,\r\n      temp_max: 60.62,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 86,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 32 },\r\n    wind: { speed: 5.06, deg: 216 },\r\n    rain: { '3h': 0.64 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-21 00:00:00',\r\n  }, {\r\n    dt: 1595300400,\r\n    main: {\r\n      temp: 59.65,\r\n      feels_like: 58.96,\r\n      temp_min: 59.65,\r\n      temp_max: 59.65,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 88,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10n',\r\n    }],\r\n    clouds: { all: 69 },\r\n    wind: { speed: 4.59, deg: 260 },\r\n    rain: { '3h': 0.32 },\r\n    sys: { pod: 'n' },\r\n    dt_txt: '2020-07-21 03:00:00',\r\n  }, {\r\n    dt: 1595311200,\r\n    main: {\r\n      temp: 60.58,\r\n      feels_like: 60.42,\r\n      temp_min: 60.58,\r\n      temp_max: 60.58,\r\n      pressure: 1018,\r\n      sea_level: 1018,\r\n      grnd_level: 958,\r\n      humidity: 89,\r\n      temp_kf: 0,\r\n    },\r\n    weather: [{\r\n      id: 500, main: 'Rain', description: 'light rain', icon: '10d',\r\n    }],\r\n    clouds: { all: 74 },\r\n    wind: { speed: 4.41, deg: 277 },\r\n    rain: { '3h': 0.96 },\r\n    sys: { pod: 'd' },\r\n    dt_txt: '2020-07-21 06:00:00',\r\n  }],\r\n  city: {\r\n    id: 2867714,\r\n    name: 'Munich',\r\n    coord: { lat: 48.1374, lon: 11.5755 },\r\n    country: 'DE',\r\n    population: 1260391,\r\n    timezone: 7200,\r\n    sunrise: 1594870229,\r\n    sunset: 1594926520,\r\n  },\r\n};\r\nexport const mockTemperaturesByDay = [\r\n  {\r\n    avgTemp: 57,\r\n    avgHumidity: 91,\r\n    avgWind: 6,\r\n    date: '2020-07-16',\r\n    items: [\r\n      {\r\n        dt: 1594890000,\r\n        main: {\r\n          temp: 58.28,\r\n          feels_like: 56.75,\r\n          temp_min: 58.28,\r\n          temp_max: 59.16,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 90,\r\n          temp_kf: -0.49,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 5.68,\r\n          deg: 262,\r\n        },\r\n        rain: {\r\n          '3h': 1.21,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-16',\r\n      },\r\n      {\r\n        dt: 1594900800,\r\n        main: {\r\n          temp: 59.34,\r\n          feels_like: 57.24,\r\n          temp_min: 59.34,\r\n          temp_max: 59.86,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 85,\r\n          temp_kf: -0.29,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 6.4,\r\n          deg: 258,\r\n        },\r\n        rain: {\r\n          '3h': 1.29,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-16',\r\n      },\r\n      {\r\n        dt: 1594911600,\r\n        main: {\r\n          temp: 56.95,\r\n          feels_like: 55.02,\r\n          temp_min: 56.91,\r\n          temp_max: 56.95,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 957,\r\n          humidity: 91,\r\n          temp_kf: 0.02,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 5.79,\r\n          deg: 296,\r\n        },\r\n        rain: {\r\n          '3h': 1.61,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-16',\r\n      },\r\n      {\r\n        dt: 1594922400,\r\n        main: {\r\n          temp: 55.15,\r\n          feels_like: 52.79,\r\n          temp_min: 55.13,\r\n          temp_max: 55.15,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 93,\r\n          temp_kf: 0.01,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 501,\r\n            main: 'Rain',\r\n            description: 'moderate rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 5.93,\r\n          deg: 288,\r\n        },\r\n        rain: {\r\n          '3h': 4.19,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-16',\r\n      },\r\n      {\r\n        dt: 1594933200,\r\n        main: {\r\n          temp: 54.55,\r\n          feels_like: 52.88,\r\n          temp_min: 54.55,\r\n          temp_max: 54.55,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 95,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 501,\r\n            main: 'Rain',\r\n            description: 'moderate rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 4.7,\r\n          deg: 293,\r\n        },\r\n        rain: {\r\n          '3h': 6.03,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-16',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    avgTemp: 59,\r\n    avgHumidity: 82,\r\n    avgWind: 3,\r\n    date: '2020-07-17',\r\n    items: [\r\n      {\r\n        dt: 1594944000,\r\n        main: {\r\n          temp: 53.98,\r\n          feels_like: 52.47,\r\n          temp_min: 53.98,\r\n          temp_max: 53.98,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 95,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 501,\r\n            main: 'Rain',\r\n            description: 'moderate rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 4.14,\r\n          deg: 303,\r\n        },\r\n        rain: {\r\n          '3h': 6.98,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1594954800,\r\n        main: {\r\n          temp: 53.53,\r\n          feels_like: 52.2,\r\n          temp_min: 53.53,\r\n          temp_max: 53.53,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 95,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 3.58,\r\n          deg: 306,\r\n        },\r\n        rain: {\r\n          '3h': 2.37,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1594965600,\r\n        main: {\r\n          temp: 54.54,\r\n          feels_like: 53.87,\r\n          temp_min: 54.54,\r\n          temp_max: 54.54,\r\n          pressure: 1019,\r\n          sea_level: 1019,\r\n          grnd_level: 958,\r\n          humidity: 94,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 98,\r\n        },\r\n        wind: {\r\n          speed: 2.75,\r\n          deg: 304,\r\n        },\r\n        rain: {\r\n          '3h': 0.34,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1594976400,\r\n        main: {\r\n          temp: 57.74,\r\n          feels_like: 57.76,\r\n          temp_min: 57.74,\r\n          temp_max: 57.74,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 86,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 1.92,\r\n          deg: 314,\r\n        },\r\n        rain: {\r\n          '3h': 0.47,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1594987200,\r\n        main: {\r\n          temp: 66.6,\r\n          feels_like: 65.52,\r\n          temp_min: 66.6,\r\n          temp_max: 66.6,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 958,\r\n          humidity: 64,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 74,\r\n        },\r\n        wind: {\r\n          speed: 4.14,\r\n          deg: 329,\r\n        },\r\n        rain: {\r\n          '3h': 0.75,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1594998000,\r\n        main: {\r\n          temp: 67.15,\r\n          feels_like: 65.23,\r\n          temp_min: 67.15,\r\n          temp_max: 67.15,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 957,\r\n          humidity: 62,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 14,\r\n        },\r\n        wind: {\r\n          speed: 5.44,\r\n          deg: 328,\r\n        },\r\n        rain: {\r\n          '3h': 0.59,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1595008800,\r\n        main: {\r\n          temp: 62.04,\r\n          feels_like: 61.66,\r\n          temp_min: 62.04,\r\n          temp_max: 62.04,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 957,\r\n          humidity: 79,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 11,\r\n        },\r\n        wind: {\r\n          speed: 3.69,\r\n          deg: 344,\r\n        },\r\n        rain: {\r\n          '3h': 1.6,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n      {\r\n        dt: 1595019600,\r\n        main: {\r\n          temp: 56.75,\r\n          feels_like: 56.73,\r\n          temp_min: 56.75,\r\n          temp_max: 56.75,\r\n          pressure: 1019,\r\n          sea_level: 1019,\r\n          grnd_level: 958,\r\n          humidity: 81,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 79,\r\n        },\r\n        wind: {\r\n          speed: 0.67,\r\n          deg: 298,\r\n        },\r\n        rain: {\r\n          '3h': 1.81,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-17',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    avgTemp: 61,\r\n    avgHumidity: 76,\r\n    avgWind: 5,\r\n    date: '2020-07-18',\r\n    items: [\r\n      {\r\n        dt: 1595030400,\r\n        main: {\r\n          temp: 54.3,\r\n          feels_like: 52.32,\r\n          temp_min: 54.3,\r\n          temp_max: 54.3,\r\n          pressure: 1019,\r\n          sea_level: 1019,\r\n          grnd_level: 958,\r\n          humidity: 86,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 64,\r\n        },\r\n        wind: {\r\n          speed: 3.76,\r\n          deg: 232,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595041200,\r\n        main: {\r\n          temp: 53.65,\r\n          feels_like: 51.15,\r\n          temp_min: 53.65,\r\n          temp_max: 53.65,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 89,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 78,\r\n        },\r\n        wind: {\r\n          speed: 4.83,\r\n          deg: 262,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595052000,\r\n        main: {\r\n          temp: 56.77,\r\n          feels_like: 55.36,\r\n          temp_min: 56.77,\r\n          temp_max: 56.77,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 85,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 59,\r\n        },\r\n        wind: {\r\n          speed: 3.8,\r\n          deg: 274,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595062800,\r\n        main: {\r\n          temp: 64.74,\r\n          feels_like: 63.12,\r\n          temp_min: 64.74,\r\n          temp_max: 64.74,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 957,\r\n          humidity: 68,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 13,\r\n        },\r\n        wind: {\r\n          speed: 5.03,\r\n          deg: 352,\r\n        },\r\n        rain: {\r\n          '3h': 0.73,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595073600,\r\n        main: {\r\n          temp: 70.16,\r\n          feels_like: 67.86,\r\n          temp_min: 70.16,\r\n          temp_max: 70.16,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 957,\r\n          humidity: 54,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 7,\r\n        },\r\n        wind: {\r\n          speed: 5.61,\r\n          deg: 336,\r\n        },\r\n        rain: {\r\n          '3h': 0.56,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595084400,\r\n        main: {\r\n          temp: 69.73,\r\n          feels_like: 67.96,\r\n          temp_min: 69.73,\r\n          temp_max: 69.73,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 956,\r\n          humidity: 59,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 11,\r\n        },\r\n        wind: {\r\n          speed: 5.75,\r\n          deg: 344,\r\n        },\r\n        rain: {\r\n          '3h': 0.91,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595095200,\r\n        main: {\r\n          temp: 62.24,\r\n          feels_like: 61.47,\r\n          temp_min: 62.24,\r\n          temp_max: 62.24,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 956,\r\n          humidity: 80,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 22,\r\n        },\r\n        wind: {\r\n          speed: 4.7,\r\n          deg: 82,\r\n        },\r\n        rain: {\r\n          '3h': 2.18,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n      {\r\n        dt: 1595106000,\r\n        main: {\r\n          temp: 58.12,\r\n          feels_like: 56.53,\r\n          temp_min: 58.12,\r\n          temp_max: 58.12,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 83,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 79,\r\n        },\r\n        wind: {\r\n          speed: 4.47,\r\n          deg: 197,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-18',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    avgTemp: 65,\r\n    avgHumidity: 69,\r\n    avgWind: 3,\r\n    date: '2020-07-19',\r\n    items: [\r\n      {\r\n        dt: 1595116800,\r\n        main: {\r\n          temp: 56.28,\r\n          feels_like: 54.88,\r\n          temp_min: 56.28,\r\n          temp_max: 56.28,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 957,\r\n          humidity: 85,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 804,\r\n            main: 'Clouds',\r\n            description: 'overcast clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 88,\r\n        },\r\n        wind: {\r\n          speed: 3.53,\r\n          deg: 221,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595127600,\r\n        main: {\r\n          temp: 54.52,\r\n          feels_like: 52.75,\r\n          temp_min: 54.52,\r\n          temp_max: 54.52,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 956,\r\n          humidity: 87,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 68,\r\n        },\r\n        wind: {\r\n          speed: 3.62,\r\n          deg: 225,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595138400,\r\n        main: {\r\n          temp: 58.95,\r\n          feels_like: 58.26,\r\n          temp_min: 58.95,\r\n          temp_max: 58.95,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 956,\r\n          humidity: 81,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 802,\r\n            main: 'Clouds',\r\n            description: 'scattered clouds',\r\n            icon: '03d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 38,\r\n        },\r\n        wind: {\r\n          speed: 2.93,\r\n          deg: 230,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595149200,\r\n        main: {\r\n          temp: 71.78,\r\n          feels_like: 72.9,\r\n          temp_min: 71.78,\r\n          temp_max: 71.78,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 957,\r\n          humidity: 56,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 800,\r\n            main: 'Clear',\r\n            description: 'clear sky',\r\n            icon: '01d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 0,\r\n        },\r\n        wind: {\r\n          speed: 0.89,\r\n          deg: 24,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595160000,\r\n        main: {\r\n          temp: 75.22,\r\n          feels_like: 74.03,\r\n          temp_min: 75.22,\r\n          temp_max: 75.22,\r\n          pressure: 1014,\r\n          sea_level: 1014,\r\n          grnd_level: 956,\r\n          humidity: 46,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 800,\r\n            main: 'Clear',\r\n            description: 'clear sky',\r\n            icon: '01d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 0,\r\n        },\r\n        wind: {\r\n          speed: 3.78,\r\n          deg: 19,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595170800,\r\n        main: {\r\n          temp: 74.71,\r\n          feels_like: 73.51,\r\n          temp_min: 74.71,\r\n          temp_max: 74.71,\r\n          pressure: 1014,\r\n          sea_level: 1014,\r\n          grnd_level: 955,\r\n          humidity: 49,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 79,\r\n        },\r\n        wind: {\r\n          speed: 4.5,\r\n          deg: 21,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595181600,\r\n        main: {\r\n          temp: 68.58,\r\n          feels_like: 69.08,\r\n          temp_min: 68.58,\r\n          temp_max: 68.58,\r\n          pressure: 1014,\r\n          sea_level: 1014,\r\n          grnd_level: 955,\r\n          humidity: 69,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 76,\r\n        },\r\n        wind: {\r\n          speed: 3.65,\r\n          deg: 35,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n      {\r\n        dt: 1595192400,\r\n        main: {\r\n          temp: 61.5,\r\n          feels_like: 61.79,\r\n          temp_min: 61.5,\r\n          temp_max: 61.5,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 956,\r\n          humidity: 79,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 804,\r\n            main: 'Clouds',\r\n            description: 'overcast clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 91,\r\n        },\r\n        wind: {\r\n          speed: 2.21,\r\n          deg: 178,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-19',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    avgTemp: 68,\r\n    avgHumidity: 69,\r\n    avgWind: 5,\r\n    date: '2020-07-20',\r\n    items: [\r\n      {\r\n        dt: 1595203200,\r\n        main: {\r\n          temp: 59.79,\r\n          feels_like: 59.14,\r\n          temp_min: 59.79,\r\n          temp_max: 59.79,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 956,\r\n          humidity: 84,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 804,\r\n            main: 'Clouds',\r\n            description: 'overcast clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 95,\r\n        },\r\n        wind: {\r\n          speed: 3.87,\r\n          deg: 211,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595214000,\r\n        main: {\r\n          temp: 57.96,\r\n          feels_like: 57.11,\r\n          temp_min: 57.96,\r\n          temp_max: 57.96,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 955,\r\n          humidity: 87,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 804,\r\n            main: 'Clouds',\r\n            description: 'overcast clouds',\r\n            icon: '04n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 88,\r\n        },\r\n        wind: {\r\n          speed: 3.76,\r\n          deg: 217,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595224800,\r\n        main: {\r\n          temp: 63.97,\r\n          feels_like: 64.29,\r\n          temp_min: 63.97,\r\n          temp_max: 63.97,\r\n          pressure: 1016,\r\n          sea_level: 1016,\r\n          grnd_level: 956,\r\n          humidity: 75,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 803,\r\n            main: 'Clouds',\r\n            description: 'broken clouds',\r\n            icon: '04d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 60,\r\n        },\r\n        wind: {\r\n          speed: 2.68,\r\n          deg: 237,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595235600,\r\n        main: {\r\n          temp: 75.09,\r\n          feels_like: 76.01,\r\n          temp_min: 75.09,\r\n          temp_max: 75.09,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 956,\r\n          humidity: 54,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 800,\r\n            main: 'Clear',\r\n            description: 'clear sky',\r\n            icon: '01d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 4,\r\n        },\r\n        wind: {\r\n          speed: 2.46,\r\n          deg: 252,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595246400,\r\n        main: {\r\n          temp: 78.31,\r\n          feels_like: 75.29,\r\n          temp_min: 78.31,\r\n          temp_max: 78.31,\r\n          pressure: 1013,\r\n          sea_level: 1013,\r\n          grnd_level: 955,\r\n          humidity: 46,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 800,\r\n            main: 'Clear',\r\n            description: 'clear sky',\r\n            icon: '01d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 3,\r\n        },\r\n        wind: {\r\n          speed: 8.59,\r\n          deg: 287,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595257200,\r\n        main: {\r\n          temp: 77.13,\r\n          feels_like: 73.35,\r\n          temp_min: 77.13,\r\n          temp_max: 77.13,\r\n          pressure: 1014,\r\n          sea_level: 1014,\r\n          grnd_level: 955,\r\n          humidity: 50,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 801,\r\n            main: 'Clouds',\r\n            description: 'few clouds',\r\n            icon: '02d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 11,\r\n        },\r\n        wind: {\r\n          speed: 10.65,\r\n          deg: 287,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595268000,\r\n        main: {\r\n          temp: 70.11,\r\n          feels_like: 71.06,\r\n          temp_min: 70.11,\r\n          temp_max: 70.11,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 956,\r\n          humidity: 70,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 7,\r\n        },\r\n        wind: {\r\n          speed: 4.03,\r\n          deg: 326,\r\n        },\r\n        rain: {\r\n          '3h': 0.21,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n      {\r\n        dt: 1595278800,\r\n        main: {\r\n          temp: 62.92,\r\n          feels_like: 64.9,\r\n          temp_min: 62.92,\r\n          temp_max: 62.92,\r\n          pressure: 1017,\r\n          sea_level: 1017,\r\n          grnd_level: 957,\r\n          humidity: 83,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 26,\r\n        },\r\n        wind: {\r\n          speed: 0.81,\r\n          deg: 353,\r\n        },\r\n        rain: {\r\n          '3h': 1.41,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-20',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    avgTemp: 60,\r\n    avgHumidity: 88,\r\n    avgWind: 5,\r\n    date: '2020-07-21',\r\n    items: [\r\n      {\r\n        dt: 1595289600,\r\n        main: {\r\n          temp: 60.62,\r\n          feels_like: 59.77,\r\n          temp_min: 60.62,\r\n          temp_max: 60.62,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 86,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 32,\r\n        },\r\n        wind: {\r\n          speed: 5.06,\r\n          deg: 216,\r\n        },\r\n        rain: {\r\n          '3h': 0.64,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-21',\r\n      },\r\n      {\r\n        dt: 1595300400,\r\n        main: {\r\n          temp: 59.65,\r\n          feels_like: 58.96,\r\n          temp_min: 59.65,\r\n          temp_max: 59.65,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 88,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10n',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 69,\r\n        },\r\n        wind: {\r\n          speed: 4.59,\r\n          deg: 260,\r\n        },\r\n        rain: {\r\n          '3h': 0.32,\r\n        },\r\n        sys: {\r\n          pod: 'n',\r\n        },\r\n        dt_txt: '2020-07-21',\r\n      },\r\n      {\r\n        dt: 1595311200,\r\n        main: {\r\n          temp: 60.58,\r\n          feels_like: 60.42,\r\n          temp_min: 60.58,\r\n          temp_max: 60.58,\r\n          pressure: 1018,\r\n          sea_level: 1018,\r\n          grnd_level: 958,\r\n          humidity: 89,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: 'Rain',\r\n            description: 'light rain',\r\n            icon: '10d',\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 74,\r\n        },\r\n        wind: {\r\n          speed: 4.41,\r\n          deg: 277,\r\n        },\r\n        rain: {\r\n          '3h': 0.96,\r\n        },\r\n        sys: {\r\n          pod: 'd',\r\n        },\r\n        dt_txt: '2020-07-21',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport PropTypes from 'prop-types';\nimport { TemperatureScales } from '../../constants/constants';\n\nconst TemperatureSelectors = (props) => {\n  const { scale } = props;\n\n  const handleRadioChange = (event) => {\n    props.onRadioChange(event.target.value);\n  };\n\n  return (\n    <RadioGroup aria-label=\"temperature\" name=\"temperature\" value={scale} onChange={handleRadioChange} row>\n      <FormControlLabel value={TemperatureScales.CELSIUS} control={<Radio color=\"primary\" />} label=\"Celsius\" />\n      <FormControlLabel value={TemperatureScales.FAHRENHEIT} control={<Radio color=\"primary\" />} label=\"Fahrenheit\" />\n    </RadioGroup>\n  );\n};\n\nexport default TemperatureSelectors;\n\nTemperatureSelectors.propTypes = {\n  scale: PropTypes.string.isRequired,\n  onRadioChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport PropTypes from 'prop-types';\nimport FadeIn from 'react-fade-in';\n\nconst WeatherBarChart = ({ series, day, scale }) => {\n  const options = {\n    chart: {\n      type: 'column',\n      className: 'chart-container',\n      zoomType: 'x',\n    },\n    title: {\n      text: `Temperatures in Munich during the day: ${day}`,\n    },\n    xAxis: {\n      type: 'category',\n      title: {\n        enabled: true,\n        text: 'Time (UTC)',\n        style: {\n          fontWeight: 'normal',\n        },\n      },\n      labels: {\n        rotation: -45,\n        style: {\n          fontSize: '13px',\n          fontFamily: 'Verdana, sans-serif',\n        },\n      },\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: `Temperatures °(${scale})`,\n      },\n    },\n    legend: {\n      enabled: false,\n    },\n    tooltip: {\n      pointFormat: `Temperature: <b>{point.y:.1f}° ${scale}</b>`,\n    },\n    series: [{\n      name: 'Temperatures',\n      color: 'rgb(56,72,168)',\n      data: series,\n      dataLabels: {\n        enabled: true,\n        rotation: -90,\n        color: '#FFFFFF',\n        align: 'right',\n        format: '{point.y:.1f}',\n        y: 10,\n        style: {\n          fontSize: '13px',\n          fontFamily: 'Verdana, sans-serif',\n        },\n      },\n    }],\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 500,\n        },\n        chartOptions: {\n          legend: {\n            enabled: false,\n          },\n        },\n      }],\n    },\n  };\n\n  return (\n    <div className=\"chart-wrapper\">\n      <div className=\"chart-inner\">\n        <FadeIn>\n          <HighchartsReact highcharts={Highcharts} options={options} />\n        </FadeIn>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherBarChart;\nWeatherBarChart.propTypes = {\n  series: PropTypes.instanceOf(Array).isRequired,\n  day: PropTypes.string.isRequired,\n  scale: PropTypes.string.isRequired,\n};\n","import moment from 'moment';\n\nconst unixToStringHour = (unixTimestamp) => {\n  const date = moment.unix(unixTimestamp).utc();\n  return date.format('HH:mm');\n};\n\nexport default unixToStringHour;\n","/*!\n * Group items from an array together by some criteria or value.\n * (c) 2019 Tom Bremmer (https://tbremer.com/) and Chris Ferdinandi (https://gomakethings.com), MIT License,\n * @param  {Array}           arr      The array to group items from\n * @param  {String|Function} criteria The criteria to group by\n * @return {Object}                   The grouped object\n */\nconst groupBy = (arr, criteria) => arr.reduce((obj, item) => {\n  // Check if the criteria is a function to run on the item or a property of it\n  const key = typeof criteria === 'function' ? criteria(item) : item[criteria];\n\n  // If the key doesn't exist yet, create it\n  // eslint-disable-next-line no-prototype-builtins\n  if (!obj.hasOwnProperty(key)) {\n    // eslint-disable-next-line no-param-reassign\n    obj[key] = [];\n  }\n\n  // Push the value to the object\n  obj[key].push(item);\n\n  // Return the object to the next item in the loop\n  return obj;\n}, {});\n\nexport default groupBy;\n","import moment from 'moment';\r\nimport { WeatherIconBaseURL, WeatherIconSuffix } from '../../constants/constants';\r\nimport groupBy from './arraysHelpers';\r\n\r\nexport const getIconUrl = (icon) => WeatherIconBaseURL + icon + WeatherIconSuffix;\r\n\r\nexport const getListByDays = (temperatures) => {\r\n  if (!temperatures) {\r\n    return [];\r\n  }\r\n\r\n  const result = [];\r\n\r\n  temperatures.map((x) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    x.dt_txt = moment(x.dt_txt).format('YYYY-MM-DD');\r\n    return x;\r\n  });\r\n  const groupedByDays = groupBy(temperatures, 'dt_txt');\r\n\r\n  Object.entries(groupedByDays).forEach(([key, value]) => {\r\n    let avgTemp = 0;\r\n    let avgHumidity = 0;\r\n    let avgWind = 0;\r\n    for (let i = 0; i < value.length; i += 1) {\r\n      avgTemp += value[i].main.temp;\r\n      avgHumidity += value[i].main.humidity;\r\n      avgWind += value[i].wind.speed;\r\n    }\r\n    avgTemp /= value.length;\r\n    avgHumidity /= value.length;\r\n    avgWind /= value.length;\r\n    result.push({\r\n      avgTemp: Math.round(avgTemp),\r\n      avgHumidity: Math.round(avgHumidity),\r\n      avgWind: Math.round(avgWind),\r\n      date: key,\r\n      items: value,\r\n    });\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const getListTemperatureGroupByDay = (temps) => {\r\n  if (!temps) {\r\n    return [];\r\n  }\r\n  return groupBy(temps, 'dt_txt');\r\n};\r\n\r\nexport const getRainInfo4Day = (items) => items.find((x) => x.rain);\r\n\r\nexport const windTransformation = (wind) => Math.round(wind * 3.6);\r\n","import { createSelector } from 'reselect';\nimport { getListByDays, getListTemperatureGroupByDay } from '../../helpers/common/weatherHelpers';\n\nconst weatherSelector = (state) => state.weather;\n\nexport const temperaturesSelector = createSelector(\n  [weatherSelector],\n  (temperatures) => ({\n    isLoading: temperatures.isLoading,\n    temperatures: getListByDays(temperatures.list),\n  }),\n);\n\nexport const temperaturesBySelectedDaySelector = createSelector(\n  [weatherSelector],\n  (temps) => ({\n    temps: getListTemperatureGroupByDay(temps.list),\n  }),\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport WeatherBarChart from './WeatherBarChart';\nimport unixToStringHour from '../../helpers/common/timeHelpers';\nimport { temperaturesBySelectedDaySelector } from '../../stores/weathers/weatherSelectors';\n\nconst ConnectedWeatherBarChart = ({ ...props }) => {\n  const { day } = props;\n  const dataState = useSelector(temperaturesBySelectedDaySelector);\n  const temperaturesByDay = dataState.temps[day];\n  const data = {\n    series: temperaturesByDay.map((item) => [unixToStringHour(item.dt), item.main.temp]),\n  };\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return (<WeatherBarChart {...data} {...props} />);\n};\n\nexport { WeatherBarChart };\nexport default ConnectedWeatherBarChart;\n\nConnectedWeatherBarChart.propTypes = {\n  day: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { TemperatureScales } from '../../constants/constants';\n\nconst Temperature = (props) => {\n  const { temperature } = props;\n  const { tempScale } = props;\n\n  const roundTemp = (temp) => Math.round(temp);\n\n  return (\n    <Typography testid=\"tempvalue\" variant=\"h1\" color=\"textPrimary\">\n      {roundTemp(temperature)}\n      °\n      {tempScale === TemperatureScales.CELSIUS ? 'C' : 'F'}\n    </Typography>\n  );\n};\n\nexport default Temperature;\n\nTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  tempScale: PropTypes.string,\n};\n\nTemperature.defaultProps = {\n  tempScale: 'C',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst AdditionalWeatherInfo = (props) => {\n  const {\n    humidity, wind, rain, snow,\n  } = props;\n\n  const round = (temp) => Math.round(temp);\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        Humidity:&nbsp;\n        {round(humidity)}\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        Wind:&nbsp;\n        {round(wind)}\n        km/h\n      </Typography>\n      {rain || snow ? (\n        <Typography testid={rain ? 'rain-data' : 'snow-data'} variant=\"subtitle1\" color=\"textSecondary\">\n          {rain ? 'Precipitation' : 'Snow'}\n          :&nbsp;\n          {rain['3h'] || snow['3h']}\n          mm\n        </Typography>\n      ) : ''}\n    </div>\n  );\n};\n\nAdditionalWeatherInfo.defaultProps = {\n  rain: undefined,\n  snow: undefined,\n};\n\nAdditionalWeatherInfo.propTypes = {\n  humidity: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n  rain: PropTypes.shape({\n    '3h': PropTypes.number.isRequired,\n  }),\n  snow: PropTypes.shape({\n    '3h': PropTypes.number.isRequired,\n  }),\n};\n\nexport default AdditionalWeatherInfo;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Temperature from '../Temperature';\nimport AdditionalWeatherInfo from '../AdditionalWeatherInfo';\nimport { getIconUrl, getRainInfo4Day, windTransformation } from '../../helpers/common/weatherHelpers';\nimport { TemperatureScales } from '../../constants/constants';\nimport './weather-card.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    cursor: 'pointer',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  body: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actions: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nconst WeatherCard = (props) => {\n  const classes = useStyles();\n  const {\n    weatherInfo, tempScale, active, day,\n  } = props;\n  const [raised, setRaised] = React.useState(false);\n  const weatherDaySubtitle = moment(weatherInfo.date).format('DD MMM YYYY');\n  const weatherDay = moment(weatherInfo.date).format('YYYY-MM-DD');\n  const toggleRaised = () => setRaised(!raised);\n\n  return (\n    <Card\n      className={classes.root}\n      raised={raised || (active && day === weatherDay)}\n      onMouseOver={() => toggleRaised()}\n      onFocus={() => toggleRaised()}\n      onMouseOut={() => toggleRaised()}\n      onBlur={() => toggleRaised()}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={getIconUrl(weatherInfo.items.length > 0 ? weatherInfo.items[0].weather[0].icon : undefined)} />\n        )}\n        title={weatherInfo.items.length > 0 ? weatherInfo.items[0].weather[0].description : ''}\n        subheader={weatherDaySubtitle}\n      />\n      <CardContent className={classes.body}>\n        <Temperature temperature={weatherInfo.avgTemp} tempScale={tempScale} />\n        <AdditionalWeatherInfo\n          humidity={weatherInfo.avgHumidity}\n          wind={windTransformation(weatherInfo.avgWind)}\n          rain={weatherInfo.items.length > 0 && getRainInfo4Day(weatherInfo.items)\n            ? getRainInfo4Day(weatherInfo.items).rain : undefined}\n          snow={weatherInfo.items.length > 0 ? weatherInfo.items[0].snow : undefined}\n        />\n      </CardContent>\n      {\n        active && day === weatherDay && (\n          <CardActions className={classes.actions}>\n            <Button disableElevation size=\"medium\" disableFocusRipple color=\"secondary\">\n              <AssessmentIcon color=\"primary\" fontSize=\"large\" />\n            </Button>\n          </CardActions>\n        )\n      }\n    </Card>\n  );\n};\n\nWeatherCard.propTypes = {\n  weatherInfo: PropTypes.shape({\n    avgHumidity: PropTypes.number,\n    avgTemp: PropTypes.number,\n    avgWind: PropTypes.number,\n    date: PropTypes.string,\n    items: PropTypes.instanceOf(Array),\n  }).isRequired,\n  tempScale: PropTypes.string,\n  day: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nWeatherCard.defaultProps = {\n  tempScale: TemperatureScales.CELSIUS,\n};\n\nexport default WeatherCard;\n","import React from 'react';\nimport './weather-card-slider.css';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport WeatherCard from '../WeatherCard';\n\nconst WeatherCardsSlider = ({ scale, content, onGraphDetail }) => {\n  const [activeCard, setActiveCard] = React.useState(false);\n  const [activeCardDay, setActiveCardDay] = React.useState('');\n\n  const handleGraphDetail = (day, active) => {\n    onGraphDetail(day);\n    setActiveCardDay(day);\n    setActiveCard(false);\n    setActiveCard(active);\n  };\n\n  const listItems = content.map((elem) => (\n    <Grid\n      key={elem.date.toString()}\n      item\n      onClick={() => handleGraphDetail(elem.date, true)}\n    >\n      <WeatherCard tempScale={scale} weatherInfo={elem} active={activeCard} day={activeCardDay} />\n    </Grid>\n  ));\n  return (\n    <Grid container spacing={3}>\n      {listItems}\n    </Grid>\n  );\n};\n\nWeatherCardsSlider.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  content: PropTypes.instanceOf(Array).isRequired,\n  onGraphDetail: PropTypes.func.isRequired,\n  scale: PropTypes.string.isRequired,\n};\n\nexport default WeatherCardsSlider;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\n\nconst CardArrows = (props) => {\n  const { showLeft, showRight } = props;\n\n  const handleLeftArrowClick = () => {\n    props.onArrowClick('left');\n  };\n  const handleRightArrowClick = () => {\n    props.onArrowClick('right');\n  };\n  return (\n    <Box className=\"w-100\" display=\"flex\" direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n      {showLeft ? (\n        <IconButton testid=\"left-arrow\" aria-label=\"left\" color=\"primary\" size=\"medium\" onClick={handleLeftArrowClick}>\n          <ArrowBackRoundedIcon />\n        </IconButton>\n      ) : <div />}\n      {showRight ? (\n        <IconButton testid=\"right-arrow\" aria-label=\"right\" color=\"primary\" size=\"medium\" onClick={handleRightArrowClick}>\n          <ArrowForwardRoundedIcon />\n        </IconButton>\n      ) : <div />}\n    </Box>\n  );\n};\n\nexport default CardArrows;\n\nCardArrows.propTypes = {\n  onArrowClick: PropTypes.func,\n  showLeft: PropTypes.bool,\n  showRight: PropTypes.bool,\n};\n\nCardArrows.defaultProps = {\n  onArrowClick: () => {},\n  showLeft: false,\n  showRight: true,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Slide from '@material-ui/core/Slide';\nimport Paper from '@material-ui/core/Paper';\nimport getAll from '../../stores/weathers/weatherAction';\nimport Loading from '../Loading';\nimport TemperatureSelectors from '../TemperatureSelectors';\nimport WeatherBarChart from '../WeatherBarChart';\nimport WeatherCardsSlider from '../WeatherCardsSlider';\nimport CardArrows from '../CardArrows';\nimport { TemperatureScales } from '../../constants/constants';\n\nconst Home = (data) => {\n  const dispatch = useDispatch();\n  const { temperatures, isLoading } = data;\n\n  const [showGraph, setShowGraph] = useState(false);\n  const [day, setDay] = useState('');\n  const [metric, setMetric] = useState(TemperatureScales.FAHRENHEIT);\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const pageSize = 3;\n  const [slideIn, setSlideIn] = useState(true);\n  const [hasLeftItems, setHasLeftItems] = useState(false);\n  const [hasRightItems, setHasRightItems] = useState(true);\n  const [slideDirection, setSlideDirection] = useState('down');\n  const numSlides = temperatures.length;\n  const content = temperatures.slice(pageIndex * pageSize,\n    pageIndex * pageSize + pageSize > numSlides ? undefined : pageIndex * pageSize + pageSize);\n\n  const scaleChanged = (scale) => {\n    setMetric(scale);\n    const units = scale === TemperatureScales.CELSIUS ? 'metric' : 'imperial';\n    setShowGraph(false);\n    dispatch(getAll('Munich,de', '40', units));\n  };\n\n  const handleSliderNavigation = (direction) => {\n    const increment = direction === 'left' ? -1 : 1;\n    const newIndex = pageIndex + increment;\n\n    const oppDirection = direction === 'left' ? 'right' : 'left';\n    setSlideDirection(direction);\n    setSlideIn(false);\n\n    setTimeout(() => {\n      setHasLeftItems(newIndex > 0);\n      setHasRightItems(newIndex + 1\n        <= (numSlides % pageSize > 0 ? numSlides / pageSize + 1 : numSlides / pageSize) - 1);\n      setPageIndex(newIndex);\n      setSlideDirection(oppDirection);\n      setSlideIn(true);\n    }, 500);\n  };\n\n  useEffect(() => {\n    // This is so the loading part can be seen\n    setTimeout(() => {\n      dispatch(getAll());\n    }, 1000);\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.keyCode === 39) {\n        handleSliderNavigation('right');\n      }\n      if (e.keyCode === 37) {\n        handleSliderNavigation('left');\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const getTemperatureByDay = (newDate) => {\n    setShowGraph(true);\n    setDay(newDate);\n  };\n\n  return (\n    <Box>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <Paper>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <div className=\"temperature-container\">\n              <TemperatureSelectors scale={metric} onRadioChange={scaleChanged} />\n            </div>\n            <CardArrows\n              showLeft={hasLeftItems}\n              showRight={hasRightItems}\n              onArrowClick={handleSliderNavigation}\n            />\n            {temperatures.length > 0 ? (\n              <Slide in={slideIn} direction={slideDirection}>\n                <div id=\"results-slider\" className=\"slider-container\">\n                  <WeatherCardsSlider\n                    scale={metric}\n                    content={content}\n                    onGraphDetail={getTemperatureByDay}\n                  />\n                </div>\n              </Slide>\n            ) : null}\n            { showGraph && <WeatherBarChart day={day} scale={metric} /> }\n          </Grid>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default Home;\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Home from './Home';\r\n\r\nimport { temperaturesSelector } from '../../stores/weathers/weatherSelectors';\r\n\r\nconst ConnectedHome = ({ ...props }) => {\r\n  const data = useSelector(temperaturesSelector);\r\n\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return (<Home {...data} {...props} />);\r\n};\r\n\r\nexport { Home };\r\nexport default ConnectedHome;\r\n","import React from 'react';\n\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ParticlesBg from 'particles-bg';\nimport history from '../../helpers/history/index';\n\nimport Home from '../Home';\nimport './App.css';\n\nconst App = () => (\n  <div>\n    <CssBaseline />\n    <ConnectedRouter basename=\"/weather-react\" history={history}>\n      <div className=\"main-body\">\n        <div className=\"content container\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </div>\n      </div>\n    </ConnectedRouter>\n    <ParticlesBg type=\"cobweb\" bg />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const round = (number) => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer = (createStore) => (\n  reducer,\n  initialState,\n  enhancer,\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now();\n    const newState = reducer(state, action);\n    const end = performance.now();\n    const diff = round(end - start);\n\n    console.log('reducer process time:', diff);\n\n    return newState;\n  };\n\n  return createStore(monitoredReducer, initialState, enhancer);\n};\n\nexport default monitorReducerEnhancer;\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.info('dispatching', action);\r\n\r\n  const result = next(action);\r\n\r\n  console.log('next state', store.getState());\r\n  console.groupEnd();\r\n\r\n  return result;\r\n};\r\n\r\nexport default logger;\r\n","import ACTION_TYPES from './weatherActionTypes';\n\nexport const initialState = {\n  isLoading: true,\n  errors: null,\n  cod: '',\n  message: 0,\n  cnt: 0,\n  list: '',\n  city: '',\n};\n\nfunction weatherReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.WEATHERS_GET_ALL_REQUEST: {\n      return {\n        ...state,\n        errors: false,\n        isLoading: true,\n      };\n    }\n\n    case ACTION_TYPES.WEATHERS_GET_ALL_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        errors: false,\n        cod: action.payload.cod,\n        message: action.payload.message,\n        cnt: action.payload.cnt,\n        list: action.payload.list,\n        city: action.payload.city,\n      };\n    }\n\n    case ACTION_TYPES.WEATHERS_GET_ALL_FAILURE: {\n      return {\n        ...state,\n        errors: true,\n        isLoading: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default weatherReducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './styles/base.css';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './stores/rootStore';\n\nconst persistedState = {};\n\nconst store = configureStore(persistedState);\n\nconst targetRoot = document.querySelector('#root');\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  targetRoot,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport monitorReducersEnhancer from '../helpers/enhancers/monitorReducers';\nimport loggerMiddleware from '../helpers/middleware/logger';\nimport rootReducers from './rootReducers';\nimport history from '../helpers/history/index';\n\nconst configureStore = (preloadedState) => {\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(\n    rootReducers(history),\n    preloadedState,\n    composedEnhancers,\n  );\n\n  return store;\n};\n\nexport default configureStore;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport weather from './weathers/weatherReducer';\n\nexport default (history) => combineReducers({\n  weather,\n  router: connectRouter(history),\n});\n"],"sourceRoot":""}